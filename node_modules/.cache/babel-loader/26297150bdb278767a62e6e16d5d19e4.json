{"ast":null,"code":"var _jsxFileName = \"/home/devops/Desktop/Job-Projects/knowledgehut/src/components/questionDashboard/ChoiceTypeSelected.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { DropTarget } from 'react-dnd';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  paper: {\n    height: 500,\n    textAlign: \"center\"\n  }\n}));\n\nconst ChoiceTypeSelected = ({\n  component\n}) => {\n  const classes = useStyles();\n  const _this$props = this.props,\n        isOver = _this$props.isOver,\n        canDrop = _this$props.canDrop,\n        connectDropTarget = _this$props.connectDropTarget,\n        droppedItem = _this$props.droppedItem;\n  let className = \"\";\n\n  if (isOver && canDrop) {\n    className = 'green';\n  } else if (!isOver && canDrop) {\n    className = 'yellow';\n  } else if (isOver && !canDrop) {\n    className = 'red';\n  }\n\n  console.log(droppedItem);\n  return connectDropTarget(React.createElement(\"div\", {\n    className: \"target \".concat(className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, droppedItem && droppedItem.id)); // return (\n  //     <div>\n  //         <Paper className={classes.paper}>Drag from left</Paper>\n  //     </div>\n  // )\n};\n\nconst spec = {\n  drop(props, monitor, component) {\n    const item = monitor.getItem();\n    props.onDrop(item);\n  }\n\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({\n      shallow: true\n    }),\n    canDrop: monitor.canDrop()\n  };\n}\n\nexport default DropTarget(\"SOURCE\", spec, collect)(ChoiceTypeSelected);","map":{"version":3,"sources":["/home/devops/Desktop/Job-Projects/knowledgehut/src/components/questionDashboard/ChoiceTypeSelected.js"],"names":["React","makeStyles","Paper","Typography","Grid","DropTarget","useStyles","theme","root","padding","spacing","paper","height","textAlign","ChoiceTypeSelected","component","classes","props","isOver","canDrop","connectDropTarget","droppedItem","className","console","log","id","spec","drop","monitor","item","getItem","onDrop","collect","connect","dropTarget","isOverCurrent","shallow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADL,GAD6B;AAInCC,EAAAA,KAAK,EAAG;AACNC,IAAAA,MAAM,EAAG,GADH;AAENC,IAAAA,SAAS,EAAG;AAFN;AAJ2B,CAAL,CAAN,CAA5B;;AAUA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AACxC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AADwC,sBAEoB,KAAKW,KAFzB;AAAA,QAEhCC,MAFgC,eAEhCA,MAFgC;AAAA,QAExBC,OAFwB,eAExBA,OAFwB;AAAA,QAEfC,iBAFe,eAEfA,iBAFe;AAAA,QAEIC,WAFJ,eAEIA,WAFJ;AAGxC,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAGJ,MAAM,IAAIC,OAAb,EAAqB;AACjBG,IAAAA,SAAS,GAAG,OAAZ;AACH,GAFD,MAEM,IAAG,CAACJ,MAAD,IAAWC,OAAd,EAAsB;AACxBG,IAAAA,SAAS,GAAG,QAAZ;AACH,GAFK,MAEA,IAAGJ,MAAM,IAAI,CAACC,OAAd,EAAsB;AACxBG,IAAAA,SAAS,GAAG,KAAZ;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,SAAOD,iBAAiB,CACpB;AAAK,IAAA,SAAS,mBAAYE,SAAZ,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMD,WAAW,IAAIA,WAAW,CAACI,EADjC,CADoB,CAAxB,CAZwC,CAiBxC;AACA;AACA;AACA;AACA;AACH,CAtBD;;AAwBA,MAAMC,IAAI,GAAG;AACXC,EAAAA,IAAI,CAACV,KAAD,EAAQW,OAAR,EAAiBb,SAAjB,EAA2B;AAC3B,UAAMc,IAAI,GAAGD,OAAO,CAACE,OAAR,EAAb;AACAb,IAAAA,KAAK,CAACc,MAAN,CAAaF,IAAb;AACH;;AAJU,CAAb;;AAMA,SAASG,OAAT,CAAiBC,OAAjB,EAA0BL,OAA1B,EAAmC;AACnC,SAAO;AACHR,IAAAA,iBAAiB,EAAEa,OAAO,CAACC,UAAR,EADhB;AAEHhB,IAAAA,MAAM,EAAEU,OAAO,CAACV,MAAR,EAFL;AAGHiB,IAAAA,aAAa,EAAEP,OAAO,CAACV,MAAR,CAAe;AAAEkB,MAAAA,OAAO,EAAE;AAAX,KAAf,CAHZ;AAIHjB,IAAAA,OAAO,EAAES,OAAO,CAACT,OAAR;AAJN,GAAP;AAMC;;AAED,eAAgBd,UAAU,CAAC,QAAD,EAAWqB,IAAX,EAAiBM,OAAjB,CAAV,CAAoClB,kBAApC,CAAhB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { DropTarget } from 'react-dnd';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      padding: theme.spacing(3, 2),\n    },\n    paper : {\n      height : 500,\n      textAlign : \"center\"\n    }\n  }));\n\nconst ChoiceTypeSelected = ({component}) => {\n    const classes = useStyles();\n    const { isOver, canDrop, connectDropTarget, droppedItem } = this.props\n    let className = \"\";\n    if(isOver && canDrop){\n        className = 'green';\n    }else if(!isOver && canDrop){\n        className = 'yellow';\n    }else if(isOver && !canDrop){\n        className = 'red'\n    }\n    console.log(droppedItem)\n    return connectDropTarget(\n        <div className={`target ${className}`}>\n            { droppedItem && droppedItem.id }\n        </div>\n    )\n    // return (\n    //     <div>\n    //         <Paper className={classes.paper}>Drag from left</Paper>\n    //     </div>\n    // )\n}\n\nconst spec = {\n  drop(props, monitor, component){\n      const item = monitor.getItem()\n      props.onDrop(item)\n  }\n}\nfunction collect(connect, monitor) {\nreturn {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop()\n};\n}\n\nexport default  DropTarget(\"SOURCE\", spec, collect)(ChoiceTypeSelected)\n"]},"metadata":{},"sourceType":"module"}