{"ast":null,"code":"var _jsxFileName = \"/home/devops/Desktop/Job-Projects/knowledgehut/react-dnd/src/components/questionDashboard/ChoiceTypeSelected.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { DropTarget } from 'react-dnd';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  paper: {\n    height: 500,\n    textAlign: \"center\"\n  }\n}));\n\nconst ChoiceTypeSelected = ({\n  isOver,\n  canDrop,\n  connectDropTarget,\n  droppedItem\n}) => {\n  const classes = useStyles(); // let className = \"\";\n  // if(isOver && canDrop){\n  //     className = 'green';\n  // }else if(!isOver && canDrop){\n  //     className = 'yellow';\n  // }else if(isOver && !canDrop){\n  //     className = 'red'\n  // }\n  // console.log(droppedItem)\n  // // return connectDropTarget(\n  //     <div className={`target ${className}`}>\n  //         { droppedItem && droppedItem.id }\n  //     </div>\n  // )\n\n  return connectDropTarget(React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Drag from left\")));\n};\n\nconst spec = {\n  drop(props, monitor, component) {\n    const types = monitor.getItem();\n    console.log(props);\n  }\n\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({\n      shallow: true\n    }),\n    canDrop: monitor.canDrop()\n  };\n}\n\nexport default DropTarget(\"SOURCE\", spec, collect)(ChoiceTypeSelected);","map":{"version":3,"sources":["/home/devops/Desktop/Job-Projects/knowledgehut/react-dnd/src/components/questionDashboard/ChoiceTypeSelected.js"],"names":["React","makeStyles","Paper","Typography","Grid","DropTarget","useStyles","theme","root","padding","spacing","paper","height","textAlign","ChoiceTypeSelected","isOver","canDrop","connectDropTarget","droppedItem","classes","spec","drop","props","monitor","component","types","getItem","console","log","collect","connect","dropTarget","isOverCurrent","shallow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADL,GAD6B;AAInCC,EAAAA,KAAK,EAAG;AACNC,IAAAA,MAAM,EAAG,GADH;AAENC,IAAAA,SAAS,EAAG;AAFN;AAJ2B,CAAL,CAAN,CAA5B;;AAUA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,iBAAlB;AAAqCC,EAAAA;AAArC,CAAD,KAAuD;AAC7E,QAAMC,OAAO,GAAGb,SAAS,EAAzB,CAD6E,CAG9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOW,iBAAiB,CACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEE,OAAO,CAACR,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADoB,CAAxB;AAKH,CAtBD;;AAwBA,MAAMS,IAAI,GAAG;AACXC,EAAAA,IAAI,CAACC,KAAD,EAAQC,OAAR,EAAiBC,SAAjB,EAA2B;AAC3B,UAAMC,KAAK,GAAGF,OAAO,CAACG,OAAR,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH;;AAJU,CAAb;;AAMA,SAASO,OAAT,CAAiBC,OAAjB,EAA0BP,OAA1B,EAAmC;AACnC,SAAO;AACHN,IAAAA,iBAAiB,EAAEa,OAAO,CAACC,UAAR,EADhB;AAEHhB,IAAAA,MAAM,EAAEQ,OAAO,CAACR,MAAR,EAFL;AAGHiB,IAAAA,aAAa,EAAET,OAAO,CAACR,MAAR,CAAe;AAAEkB,MAAAA,OAAO,EAAE;AAAX,KAAf,CAHZ;AAIHjB,IAAAA,OAAO,EAAEO,OAAO,CAACP,OAAR;AAJN,GAAP;AAMC;;AAED,eAAgBX,UAAU,CAAC,QAAD,EAAWe,IAAX,EAAiBS,OAAjB,CAAV,CAAoCf,kBAApC,CAAhB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { DropTarget } from 'react-dnd';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      padding: theme.spacing(3, 2),\n    },\n    paper : {\n      height : 500,\n      textAlign : \"center\"\n    }\n  }));\n\nconst ChoiceTypeSelected = ({isOver, canDrop, connectDropTarget, droppedItem}) => {\n     const classes = useStyles();\n   \n    // let className = \"\";\n    // if(isOver && canDrop){\n    //     className = 'green';\n    // }else if(!isOver && canDrop){\n    //     className = 'yellow';\n    // }else if(isOver && !canDrop){\n    //     className = 'red'\n    // }\n    // console.log(droppedItem)\n    // // return connectDropTarget(\n    //     <div className={`target ${className}`}>\n    //         { droppedItem && droppedItem.id }\n    //     </div>\n    // )\n    return connectDropTarget(\n        <div>\n            <Paper className={classes.paper}>Drag from left</Paper>\n        </div>\n    )\n}\n\nconst spec = {\n  drop(props, monitor, component){\n      const types = monitor.getItem()\n      console.log(props)\n  }\n}\nfunction collect(connect, monitor) {\nreturn {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop()\n};\n}\n\nexport default  DropTarget(\"SOURCE\", spec, collect)(ChoiceTypeSelected)\n"]},"metadata":{},"sourceType":"module"}