{"ast":null,"code":"var _jsxFileName = \"/home/devops/Desktop/Job-Projects/knowledgehut/react-dnd/src/components/questionDashboard/ChoiceTypeSelected.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { DropTarget } from 'react-dnd';\nimport TargetDropArea from './TargetDropArea';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  paper: {\n    height: 500,\n    textAlign: \"center\"\n  }\n}));\n\nconst ChoiceTypeSelected = props => {\n  const classes = useStyles();\n  console.log(props); // let className = \"\";\n  // if(isOver && canDrop){\n  //     className = 'green';\n  // }else if(!isOver && canDrop){\n  //     className = 'yellow';\n  // }else if(isOver && !canDrop){\n  //     className = 'red'\n  // }\n  // console.log(droppedItem)\n  // // return connectDropTarget(\n  //     <div className={`target ${className}`}>\n  //         { droppedItem && droppedItem.id }\n  //     </div>\n  // )\n\n  return props.connectDropTarget(React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Drag from left\")));\n};\n\nconst spec = {\n  drop(props, monitor, component) {\n    const typeId = monitor.getItem();\n    console.log(typeId, monitor);\n  }\n\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({\n      shallow: true\n    }),\n    canDrop: monitor.canDrop()\n  };\n}\n\nexport default DropTarget(\"SOURCE\", spec, collect)(ChoiceTypeSelected);","map":{"version":3,"sources":["/home/devops/Desktop/Job-Projects/knowledgehut/react-dnd/src/components/questionDashboard/ChoiceTypeSelected.js"],"names":["React","makeStyles","Paper","Typography","Grid","DropTarget","TargetDropArea","useStyles","theme","root","padding","spacing","paper","height","textAlign","ChoiceTypeSelected","props","classes","console","log","connectDropTarget","spec","drop","monitor","component","typeId","getItem","collect","connect","dropTarget","isOver","isOverCurrent","shallow","canDrop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADL,GAD6B;AAInCC,EAAAA,KAAK,EAAG;AACNC,IAAAA,MAAM,EAAG,GADH;AAENC,IAAAA,SAAS,EAAG;AAFN;AAJ2B,CAAL,CAAN,CAA5B;;AAUA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACjC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACFW,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAFmC,CAGlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOA,KAAK,CAACI,iBAAN,CACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEH,OAAO,CAACL,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADG,CAAP;AAKH,CAtBD;;AAwBA,MAAMS,IAAI,GAAG;AACXC,EAAAA,IAAI,CAACN,KAAD,EAAQO,OAAR,EAAiBC,SAAjB,EAA2B;AAC3B,UAAMC,MAAM,GAAGF,OAAO,CAACG,OAAR,EAAf;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ,EAAoBF,OAApB;AACH;;AAJU,CAAb;;AAMA,SAASI,OAAT,CAAiBC,OAAjB,EAA0BL,OAA1B,EAAmC;AAEnC,SAAO;AACHH,IAAAA,iBAAiB,EAAEQ,OAAO,CAACC,UAAR,EADhB;AAEHC,IAAAA,MAAM,EAAEP,OAAO,CAACO,MAAR,EAFL;AAGHC,IAAAA,aAAa,EAAER,OAAO,CAACO,MAAR,CAAe;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAAf,CAHZ;AAIHC,IAAAA,OAAO,EAAEV,OAAO,CAACU,OAAR;AAJN,GAAP;AAMC;;AAED,eAAgB5B,UAAU,CAAC,QAAD,EAAWgB,IAAX,EAAiBM,OAAjB,CAAV,CAAoCZ,kBAApC,CAAhB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { DropTarget } from 'react-dnd';\nimport TargetDropArea from './TargetDropArea'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      padding: theme.spacing(3, 2),\n    },\n    paper : {\n      height : 500,\n      textAlign : \"center\"\n    }\n  }));\n\nconst ChoiceTypeSelected = (props) => {\n     const classes = useStyles();\n   console.log(props)\n    // let className = \"\";\n    // if(isOver && canDrop){\n    //     className = 'green';\n    // }else if(!isOver && canDrop){\n    //     className = 'yellow';\n    // }else if(isOver && !canDrop){\n    //     className = 'red'\n    // }\n    // console.log(droppedItem)\n    // // return connectDropTarget(\n    //     <div className={`target ${className}`}>\n    //         { droppedItem && droppedItem.id }\n    //     </div>\n    // )\n    return props.connectDropTarget(\n        <div>\n            <Paper className={classes.paper}>Drag from left</Paper>\n        </div>\n    )\n}\n\nconst spec = {\n  drop(props, monitor, component){\n      const typeId = monitor.getItem()\n      console.log(typeId, monitor)\n  }\n}\nfunction collect(connect, monitor) {\n\nreturn {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop()\n};\n}\n\nexport default  DropTarget(\"SOURCE\", spec, collect)(ChoiceTypeSelected)\n"]},"metadata":{},"sourceType":"module"}