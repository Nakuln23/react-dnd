{"ast":null,"code":"var _jsxFileName = \"/home/devops/Desktop/Job-Projects/knowledgehut/src/components/questionDashboard/Index.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SelectQuestionType from './SelectQuestionType';\nimport ChoiceTypeSelected from './ChoiceTypeSelected';\nimport Typography from '@material-ui/core/Typography';\nimport MapQuestionTypes from './MapQuestionTypes';\nimport HTML5Backend from 'react-dnd-html5-backend'; // import { DragDropContext } from 'react-dnd';\n\nimport { DragDropContext } from \"react-dnd\"; // import DragDropContext from 'react-dnd/lib/cjs/DragDropContext.js';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n});\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionTypes: [{\n        id: 1,\n        select: \"Choice\",\n        Icon: \"CheckCircleOutlined\"\n      }, {\n        id: 2,\n        select: \"Order\",\n        Icon: \"CheckCircleOutlined\"\n      }, {\n        id: 3,\n        select: \"Match\",\n        Icon: \"CheckCircleOutlined\"\n      }]\n    };\n\n    this.handleDrop = id => {\n      console.log(id);\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const questionTypes = this.state.questionTypes;\n    console.log(questionTypes);\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, questionTypes.map(type => {\n      return React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(MapQuestionTypes, {\n        type: type,\n        handleDrop: id => {\n          this.handleDrop(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(ChoiceTypeSelected, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst Wrapper = DragDropContext(HTML5Backend);\nexport default Wrapper(withStyles(styles)(Index));","map":{"version":3,"sources":["/home/devops/Desktop/Job-Projects/knowledgehut/src/components/questionDashboard/Index.js"],"names":["React","Component","withStyles","Paper","Grid","SelectQuestionType","ChoiceTypeSelected","Typography","MapQuestionTypes","HTML5Backend","DragDropContext","styles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Index","state","questionTypes","id","select","Icon","handleDrop","console","log","render","classes","props","map","type","Wrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SelectQuestionType from './SelectQuestionType';\nimport ChoiceTypeSelected from './ChoiceTypeSelected';\nimport Typography from '@material-ui/core/Typography';\nimport MapQuestionTypes from './MapQuestionTypes';\nimport HTML5Backend from 'react-dnd-html5-backend'\n// import { DragDropContext } from 'react-dnd';\nimport { DragDropContext } from \"react-dnd\";\n// import DragDropContext from 'react-dnd/lib/cjs/DragDropContext.js';\n\nconst styles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  });\n\nclass Index extends Component {\n\n  state = {\n    questionTypes : [\n      {\n        id : 1,\n        select : \"Choice\",\n        Icon : \"CheckCircleOutlined\",\n      },\n      {\n        id : 2,\n        select : \"Order\",\n        Icon : \"CheckCircleOutlined\",\n      },\n      {\n        id : 3,\n        select : \"Match\",\n        Icon : \"CheckCircleOutlined\",\n      },\n\n    ]\n  }\n\n  handleDrop = (id) => {\n     console.log(id)\n    }\n  \n  render() {\n    const {classes} = this.props;\n    const {questionTypes} = this.state;\n    console.log(questionTypes)\n      return (\n        <div className = {classes.root}>\n              <Grid container spacing={3}>\n                <Grid item xs={4}>\n                  <Grid container spacing={2}>\n                      {questionTypes.map(type => {\n                      return (\n                        <Grid item xs={4}>\n                            <MapQuestionTypes type={type} handleDrop = {(id)=> {\n                              this.handleDrop(id)\n                            }}/>\n                        </Grid>\n                        ) \n                        })}\n                  </Grid>\n                  {/* <SelectQuestionType types={questionTypes} handleDrop = {(id)=> {\n                    this.handleDrop(id)\n                  }}/>  */}\n                </Grid>\n                <Grid item xs={8}>\n                  <ChoiceTypeSelected/>\n                </Grid>\n              </Grid>\n        </div>\n      )\n    }\n  }\n  \n const Wrapper = DragDropContext(HTML5Backend)\n  \n export default Wrapper(withStyles(styles)(Index))"]},"metadata":{},"sourceType":"module"}