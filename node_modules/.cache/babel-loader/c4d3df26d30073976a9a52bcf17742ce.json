{"ast":null,"code":"var _jsxFileName = \"/home/devops/Desktop/Job-Projects/knowledgehut/src/components/questionDashboard/ChoiceTypeSelected.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { DropTarget } from 'react-dnd';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  paper: {\n    height: 500,\n    textAlign: \"center\"\n  }\n}));\n\nconst ChoiceTypeSelected = ({\n  isOver,\n  canDrop,\n  connectDropTarget,\n  droppedItem\n}) => {\n  const classes = useStyles();\n  let className = \"\";\n\n  if (isOver && canDrop) {\n    className = 'green';\n  } else if (!isOver && canDrop) {\n    className = 'yellow';\n  } else if (isOver && !canDrop) {\n    className = 'red';\n  }\n\n  console.log(droppedItem);\n  return connectDropTarget(React.createElement(\"div\", {\n    className: \"target \".concat(className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, droppedItem && droppedItem.id)); // return (\n  //     <div>\n  //         <Paper className={classes.paper}>Drag from left</Paper>\n  //     </div>\n  // )\n};\n\nconst spec = {\n  drop(props, monitor, component) {\n    const item = monitor.getItem();\n    props.onDrop(item);\n  }\n\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({\n      shallow: true\n    }),\n    canDrop: monitor.canDrop()\n  };\n}\n\nexport default DropTarget(\"SOURCE\", spec, collect)(ChoiceTypeSelected);","map":{"version":3,"sources":["/home/devops/Desktop/Job-Projects/knowledgehut/src/components/questionDashboard/ChoiceTypeSelected.js"],"names":["React","makeStyles","Paper","Typography","Grid","DropTarget","useStyles","theme","root","padding","spacing","paper","height","textAlign","ChoiceTypeSelected","isOver","canDrop","connectDropTarget","droppedItem","classes","className","console","log","id","spec","drop","props","monitor","component","item","getItem","onDrop","collect","connect","dropTarget","isOverCurrent","shallow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADL,GAD6B;AAInCC,EAAAA,KAAK,EAAG;AACNC,IAAAA,MAAM,EAAG,GADH;AAENC,IAAAA,SAAS,EAAG;AAFN;AAJ2B,CAAL,CAAN,CAA5B;;AAUA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,iBAAlB;AAAqCC,EAAAA;AAArC,CAAD,KAAuD;AAC7E,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAED,MAAIc,SAAS,GAAG,EAAhB;;AACA,MAAGL,MAAM,IAAIC,OAAb,EAAqB;AACjBI,IAAAA,SAAS,GAAG,OAAZ;AACH,GAFD,MAEM,IAAG,CAACL,MAAD,IAAWC,OAAd,EAAsB;AACxBI,IAAAA,SAAS,GAAG,QAAZ;AACH,GAFK,MAEA,IAAGL,MAAM,IAAI,CAACC,OAAd,EAAsB;AACxBI,IAAAA,SAAS,GAAG,KAAZ;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,SAAOD,iBAAiB,CACpB;AAAK,IAAA,SAAS,mBAAYG,SAAZ,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMF,WAAW,IAAIA,WAAW,CAACK,EADjC,CADoB,CAAxB,CAZ8E,CAiB9E;AACA;AACA;AACA;AACA;AACH,CAtBD;;AAwBA,MAAMC,IAAI,GAAG;AACXC,EAAAA,IAAI,CAACC,KAAD,EAAQC,OAAR,EAAiBC,SAAjB,EAA2B;AAC3B,UAAMC,IAAI,GAAGF,OAAO,CAACG,OAAR,EAAb;AACAJ,IAAAA,KAAK,CAACK,MAAN,CAAaF,IAAb;AACH;;AAJU,CAAb;;AAMA,SAASG,OAAT,CAAiBC,OAAjB,EAA0BN,OAA1B,EAAmC;AACnC,SAAO;AACHV,IAAAA,iBAAiB,EAAEgB,OAAO,CAACC,UAAR,EADhB;AAEHnB,IAAAA,MAAM,EAAEY,OAAO,CAACZ,MAAR,EAFL;AAGHoB,IAAAA,aAAa,EAAER,OAAO,CAACZ,MAAR,CAAe;AAAEqB,MAAAA,OAAO,EAAE;AAAX,KAAf,CAHZ;AAIHpB,IAAAA,OAAO,EAAEW,OAAO,CAACX,OAAR;AAJN,GAAP;AAMC;;AAED,eAAgBX,UAAU,CAAC,QAAD,EAAWmB,IAAX,EAAiBQ,OAAjB,CAAV,CAAoClB,kBAApC,CAAhB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { DropTarget } from 'react-dnd';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      padding: theme.spacing(3, 2),\n    },\n    paper : {\n      height : 500,\n      textAlign : \"center\"\n    }\n  }));\n\nconst ChoiceTypeSelected = ({isOver, canDrop, connectDropTarget, droppedItem}) => {\n     const classes = useStyles();\n   \n    let className = \"\";\n    if(isOver && canDrop){\n        className = 'green';\n    }else if(!isOver && canDrop){\n        className = 'yellow';\n    }else if(isOver && !canDrop){\n        className = 'red'\n    }\n    console.log(droppedItem)\n    return connectDropTarget(\n        <div className={`target ${className}`}>\n            { droppedItem && droppedItem.id }\n        </div>\n    )\n    // return (\n    //     <div>\n    //         <Paper className={classes.paper}>Drag from left</Paper>\n    //     </div>\n    // )\n}\n\nconst spec = {\n  drop(props, monitor, component){\n      const item = monitor.getItem()\n      props.onDrop(item)\n  }\n}\nfunction collect(connect, monitor) {\nreturn {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop()\n};\n}\n\nexport default  DropTarget(\"SOURCE\", spec, collect)(ChoiceTypeSelected)\n"]},"metadata":{},"sourceType":"module"}