{"ast":null,"code":"var _jsxFileName = \"/home/devops/Desktop/Job-Projects/knowledgehut/react-dnd/src/components/questionDashboard/Index.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SelectQuestionType from './SelectQuestionType';\nimport ChoiceTypeSelected from './ChoiceTypeSelected';\nimport Typography from '@material-ui/core/Typography';\nimport MapQuestionTypes from './MapQuestionTypes';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext } from \"react-dnd\";\nimport TargetDropArea from './TargetDropArea';\nimport Marks from './Marks';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n});\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionTypes: // [\n      {\n        id: 1,\n        select: \"Choice\",\n        Icon: \"CheckCircleOutlined\",\n        component: React.createElement(ChoiceTypeSelected, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })\n      } // {\n      //   id : 2,\n      //   select : \"Order\",\n      //   Icon : \"CheckCircleOutlined\",\n      // },\n      // {\n      //   id : 3,\n      //   select : \"Match\",\n      //   Icon : \"CheckCircleOutlined\",\n      // },\n      // ]\n\n    };\n\n    this.handleDrop = questionType => {\n      //  if (id == 1) {\n      console.log('***************', questionType);\n      this.setState({\n        component: \"some text\"\n      }); //  }\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const questionTypes = this.state.questionTypes; // console.log('*************************',questionTypes)\n\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(SelectQuestionType, {\n      types: questionTypes,\n      handleDrop: questionType => {\n        this.handleDrop(questionType);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Marks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.component ? React.createElement(ChoiceTypeSelected, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : React.createElement(TargetDropArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst Wrapper = DragDropContext(HTML5Backend);\nexport default Wrapper(withStyles(styles)(Index));","map":{"version":3,"sources":["/home/devops/Desktop/Job-Projects/knowledgehut/react-dnd/src/components/questionDashboard/Index.js"],"names":["React","Component","withStyles","Paper","Grid","SelectQuestionType","ChoiceTypeSelected","Typography","MapQuestionTypes","HTML5Backend","DragDropContext","TargetDropArea","Marks","styles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Index","state","questionTypes","id","select","Icon","component","handleDrop","questionType","console","log","setState","render","classes","props","Wrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SelectQuestionType from './SelectQuestionType';\nimport ChoiceTypeSelected from './ChoiceTypeSelected';\nimport Typography from '@material-ui/core/Typography';\nimport MapQuestionTypes from './MapQuestionTypes';\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { DragDropContext } from \"react-dnd\";\nimport TargetDropArea from './TargetDropArea';\nimport Marks from './Marks';\n\nconst styles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  });\n\nclass Index extends Component {\n\n  state = {\n    questionTypes : \n    // [\n      {\n        id : 1,\n        select : \"Choice\",\n        Icon : \"CheckCircleOutlined\",\n        component : <ChoiceTypeSelected/>\n      },\n      // {\n      //   id : 2,\n      //   select : \"Order\",\n      //   Icon : \"CheckCircleOutlined\",\n      // },\n      // {\n      //   id : 3,\n      //   select : \"Match\",\n      //   Icon : \"CheckCircleOutlined\",\n      // },\n\n    // ]\n  }\n\n  handleDrop = (questionType) => {\n    //  if (id == 1) {\n       console.log('***************',questionType)\n\n       this.setState({\n        component : \"some text\"\n       })\n       \n    //  }\n    }\n  \n  render() {\n    const {classes} = this.props;\n    const {questionTypes} = this.state;\n    // console.log('*************************',questionTypes)\n      return (\n        <div className = {classes.root}>\n              <Grid container spacing={3}>\n                <Grid item xs={4}>\n                  <SelectQuestionType types={questionTypes} handleDrop = {(questionType)=> {\n                    this.handleDrop(questionType)\n                  }}/> \n                <Marks/>\n                </Grid>\n                \n                <Grid item xs={8}>\n                  \n                  {this.state.component ? <ChoiceTypeSelected/> : <TargetDropArea/>  }\n                </Grid>\n              </Grid>\n        </div>\n      )\n    }\n  }\n  \n const Wrapper = DragDropContext(HTML5Backend)\n  \n export default Wrapper(withStyles(styles)(Index))"]},"metadata":{},"sourceType":"module"}